{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","generateNewDate","setState","console","info","toLocaleTimeString","this","window","setInterval","prevName","props","clockName","debug","clearInterval","timeString","className","Component","getRandomName","value","now","toString","slice","App","hasClock","getNewName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,aALF,IAsBEC,gBAAkB,WAChB,EAAKC,SAAS,CAAEJ,MAAO,IAAIC,OAG3BI,QAAQC,KAAK,EAAKP,MAAMC,MAAMO,uBA1BlC,uDAOE,WACEC,KAAKN,QAAUO,OAAOC,YAAYF,KAAKL,gBAAiB,OAR5D,gCAWE,SAAmBQ,GACbH,KAAKI,MAAMC,YAAcF,EAASE,WAEpCR,QAAQS,MAAR,uBAA8BH,EAASE,UAAvC,eAAuDL,KAAKI,MAAMC,cAdxE,kCAkBE,WACEJ,OAAOM,cAAcP,KAAKN,WAnB9B,oBA6BE,WACE,IACMc,EADYR,KAAKT,MAAfC,MACiBO,qBAEzB,OACE,sBAAMU,UAAU,cAAhB,SACGD,QAnCT,GAA2BE,aCN3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAQX,IAAMI,EAAb,4MACEzB,MAAQ,CACNc,UAAW,UACXY,UAAU,GAHd,EAuBEC,WAAa,WACX,EAAKtB,SAAS,CAAES,UAAWM,OAxB/B,uDAME,WAAqB,IAAD,OAClBV,OAAOC,YAAYF,KAAKkB,WAAY,MAEpCC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACFD,GACF,EAAKzB,SAAS,CAAEqB,UAAU,OAI9BE,SAASC,iBAAiB,SAAS,SAACC,GAC9BA,GACF,EAAKzB,SAAS,CAAEqB,UAAU,SAlBlC,oBA2BE,WACE,MAAgCjB,KAAKT,MAA7Bc,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GACC,sBAAKR,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGT,KAAKT,MAAMc,YAGb,YACD,cAAC,EAAD,CAAOA,UAAWA,cAxC9B,GAAyBK,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.c38b172d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype Props = {\n  clockName: string\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timerId: number | undefined;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(this.generateNewDate, 1000);\n  }\n\n  componentDidUpdate(prevName: Props) {\n    if (this.props.clockName !== prevName.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  generateNewDate = () => {\n    this.setState({ today: new Date() });\n\n    // eslint-disable-next-line no-console\n    console.info(this.state.today.toLocaleTimeString());\n  };\n\n  render() {\n    const { today } = this.state;\n    const timeString = today.toLocaleTimeString();\n\n    return (\n      <span className=\"Clock__time\">\n        {timeString}\n      </span>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    window.setInterval(this.getNewName, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      if (event) {\n        this.setState({ hasClock: false });\n      }\n    });\n\n    document.addEventListener('click', (event) => {\n      if (event) {\n        this.setState({ hasClock: true });\n      }\n    });\n  }\n\n  getNewName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">\n              {this.state.clockName}\n            </strong>\n\n            {' time is '}\n            <Clock clockName={clockName} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}